 <beans:beans  
    xmlns="http://www.springframework.org/schema/mvc"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
<!-- 
	Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" cache-period="31556926" />
	<resources mapping="/uploads/**" location="/uploads/" cache-period="0" /> 
         <!-- 
	    <mvc:resources mapping="/resources/**" location="/resources/theme1/"
	cache-period="31556926"/>
	    	-->
	<context:component-scan base-package="com.samson" />
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/ridapp" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="usbw" /> 
	 
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list> 
				<beans:value>com.samson.model.User</beans:value> 	
				<beans:value>com.samson.model.Booking</beans:value> 		
				<beans:value>com.samson.model.Trip</beans:value> 	
				<!-- <beans:value>com.samson.model.Report</beans:value> 	
				<beans:value>com.samson.model.Review</beans:value> 		
				<beans:value>com.samson.model.Rating</beans:value> 	  -->							
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
 	

	<beans:bean id="userDao" class="com.samson.dao.UserDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="userService" class="com.samson.service.UserServiceImpl">
		<beans:property name="userDao" ref="userDao"></beans:property>
	</beans:bean>	

	 	<beans:bean id="bookingDao" class="com.samson.dao.BookingDaoImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="bookingService" class="com.samson.service.BookingServiceImpl">
		<beans:property name="bookingDao" ref="bookingDao"></beans:property>
	</beans:bean>	

	 	<beans:bean id="tripDao" class="com.samson.dao.TripDaoImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="tripService" class="com.samson.service.TripServiceImpl">
		<beans:property name="tripDao" ref="tripDao"></beans:property>
		<beans:property name="bookingDao" ref="bookingDao"></beans:property>
	</beans:bean>	
	
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
 
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
 <beans:property name="maxUploadSize" value="268435456"/>
</beans:bean>
 
</beans:beans>
 
 